@use "theme.utils" as theme;

.button {
  padding: theme.spacing(0.6) theme.spacing(1);
  border: var(--border) solid transparent;
  border-radius: var(--radius-sm);
  cursor: pointer;
  transition: background-color 0.2s ease;

  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: theme.spacing(1);
}

.submit {
  margin-top: theme.spacing(2);
}

.full-width {
  width: 100%;
}

.round {
  border-radius: 50%;
  padding: theme.spacing(1.4) theme.spacing(1.4);
}

@mixin solid($color) {
  background-color: var(--#{$color});
  color: var(--on-#{$color});
  stroke: var(--on-#{$color});

  &:hover {
    background-color: var(--#{$color}-hover-bg);
    border-color: var(--#{$color}-hover-border);
  }

  &:active {
    background-color: var(--#{$color}-active-bg);
    border-color: var(--#{$color}-active-border);
    color: var(--#{$color}-on-active-bg);
    stroke: var(--#{$color}-on-active-bg);
  }

  &:disabled {
    background-color: var(--#{$color}-disabled-bg);
    border-color: var(--#{$color}-disabled-bg);
    color: var(--#{$color}-on-disabled-bg);
    stroke: var(--#{$color}-on-disabled-bg);
    cursor: not-allowed;
    box-shadow: none;
  }

  &:focus {
    outline: var(--#{$color}-active-border) solid var(--border);
  }
}

@mixin light($color) {
  background-color: transparent;
  color: var(--on-#{$color});
  stroke: var(--on-#{$color});

  &:hover {
    background-color: var(--#{$color}-hover-bg);
    border-color: var(--#{$color}-hover-border);
  }

  &:active {
    background-color: var(--#{$color}-active-bg);
    border-color: var(--#{$color}-active-border);
    color: var(--#{$color}-on-active-bg);
    stroke: var(--#{$color}-on-active-bg);
  }

  &:disabled {
    background-color: transparent;
    border-color: transparent;
    color: var(--#{$color}-on-disabled-bg);
    stroke: var(--#{$color}-on-disabled-bg);
    cursor: not-allowed;
    box-shadow: none;
    &:hover {
      background-color: var(--#{$color}-disabled-bg);
      border-color: var(--#{$color}-disabled-bg);
    }
  }

  &:focus {
    outline: var(--#{$color}-active-border) solid var(--border);
  }
}

@each $color in theme.$colors {
  .solid.#{$color} {
    @include solid("#{$color}");
  }

  .light.#{$color} {
    @include light("#{$color}-light");
  }
}

.button-group {
  display: flex;
  flex-direction: row;
  gap: 0;

  .button:first-child {
    border-radius: var(--radius-sm) 0 0 var(--radius-sm);
  }

  .button {
    border-radius: 0;
  }

  .button:last-child {
    border-radius: 0 var(--radius-sm) var(--radius-sm) 0;
  }
}
