# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  tags:
    include: 
    - '*'

pool: "Home Server"

stages:
- stage: build
  jobs:
  - job:
    displayName: "Build nextapp"
    pool: "Home Server"
    steps:
    - task: Cache@2
      displayName: 'Cache .next/cache'
      inputs:
        key: next | $(Agent.OS) | package-lock.json
        path: '$(System.DefaultWorkingDirectory)/.next/cache'
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: '$(System.DefaultWorkingDirectory)'
      displayName: 'Install dependencies'
    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: '$(System.DefaultWorkingDirectory)'
        customCommand: 'build'
      displayName: 'Build app'
    - task: CopyFiles@2
      displayName: 'Copy .next/standalone to staging directory'
      inputs:
        SourceFolder: '.next/standalone'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/standalone'
    - task: CopyFiles@2
      displayName: 'Copy .next/static to staging directory'
      inputs:
        SourceFolder: '.next/static'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/static'
    - publish: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Publish Nextapp'
      artifact: nextapp
  
- stage: test
  dependsOn: build
  jobs:
  - job:
    displayName: "Test nextapp"
    steps:
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: '$(System.DefaultWorkingDirectory)'
    - task: Npm@1
      displayName: "Run Tests"
      inputs:
        command: 'custom'
        workingDir: '$(System.DefaultWorkingDirectory)'
        customCommand: 'test'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/junit.xml'
        failTaskOnFailureToPublishResults: true
        failTaskOnMissingResultsFile: true

- stage: deploy
  dependsOn: test
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  jobs:
  - deployment: 
    displayName: "Deploy docker image"
    environment:
      name: nextcondo-frontend
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - download: current
            artifact: nextapp
          - task: CopyFiles@2
            displayName: 'Copy nextapp/standalone to working directory'
            inputs:
              SourceFolder: '$(Pipeline.Workspace)/nextapp/standalone'
              Contents: '**'
              TargetFolder: '.next/standalone'
          - task: CopyFiles@2
            displayName: 'Copy nextapp/static to working directory'
            inputs:
              SourceFolder: '$(Pipeline.Workspace)/nextapp/static'
              Contents: '**'
              TargetFolder: '.next/static'
          - task: Docker@2
            displayName: 'Build docker image'
            inputs:
              containerRegistry: 'azure'
              repository: 'thejguih/nextcondo'
              command: 'build'
              Dockerfile: '**/Dockerfile'
              tags: |
                $(Build.SourceBranchName)
                latest
          - task: Docker@2
            displayName: 'Publish image to docker-hub'
            inputs:
              containerRegistry: 'azure'
              repository: 'thejguih/nextcondo'
              command: 'push'
              tags: |
                $(Build.SourceBranchName)
                latest
          - script: |
              docker rmi thejguih/nextcondo:$(Build.SourceBranchName)
            displayName: "Remove image $(Build.SourceBranchName) from host"
          - script: |
              docker rmi thejguih/nextcondo:latest
            displayName: "Remove image latest from host"
