# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  tags:
    include:
      - "*"

pool: "Home Server"

stages:
  - stage: build
    jobs:
      - job:
        displayName: "Build nextjsapp"
        pool: "Home Server"
        steps:
          - task: Cache@2
            displayName: "Cache .next/cache"
            inputs:
              key: next | $(Agent.OS) | package-lock.json
              path: "$(System.DefaultWorkingDirectory)/.next/cache"
          - task: Npm@1
            inputs:
              command: "install"
              workingDir: "$(System.DefaultWorkingDirectory)"
            displayName: "Install dependencies"
          - script: |
              bash scripts/build.sh
            displayName: "Build nextjsapp"
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(System.DefaultWorkingDirectory)/.next/standalone"
              artifact: "nextapp"
              publishLocation: "pipeline"

  - stage: test
    dependsOn: build
    jobs:
      - job:
        displayName: "Test nextapp"
        steps:
          - task: Npm@1
            inputs:
              command: "install"
              workingDir: "$(System.DefaultWorkingDirectory)"
          - script: |
              bash scripts/run-tests.sh
            displayName: "Test nextjsapp"
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "**/junit.xml"
              failTaskOnFailureToPublishResults: true
              failTaskOnMissingResultsFile: true

  - stage: deploy
    dependsOn: test
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    jobs:
      - deployment:
        displayName: "Deploy docker image"
        environment:
          name: nextcondo-frontend
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: "current"
                    artifactName: "nextapp"
                    targetPath: "$(System.DefaultWorkingDirectory)/release"
                - task: Docker@2
                  displayName: "Build docker image"
                  inputs:
                    containerRegistry: "azure"
                    repository: "thejguih/nextcondo"
                    command: "build"
                    Dockerfile: "**/Dockerfile"
                    tags: |
                      $(Build.SourceBranchName)
                      latest
                - task: Docker@2
                  displayName: "Publish image to docker-hub"
                  inputs:
                    containerRegistry: "azure"
                    repository: "thejguih/nextcondo"
                    command: "push"
                    tags: |
                      $(Build.SourceBranchName)
                      latest
                - script: |
                    docker rmi thejguih/nextcondo:$(Build.SourceBranchName)
                  displayName: "Remove image $(Build.SourceBranchName) from host"
